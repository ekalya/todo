/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { isNumber } from '../internal/utils';
/**
 * \@example
 *
 * this.peopleStore.update(id, person => ({
 *   guests: increment(person.guests)
 * }));
 * @param {?} value
 * @param {?=} params
 * @return {?}
 */
export function increment(value, params) {
    if (params === void 0) { params = { maxValue: undefined }; }
    if (isNumber(value) === false)
        return;
    if (params.maxValue && value === params.maxValue)
        return value;
    return value + 1;
}
/**
 * \@example
 *
 * this.peopleStore.update(id, person => ({
 *   guests: decrement(person.guests)
 * }));
 * @param {?} value
 * @param {?=} params
 * @return {?}
 */
export function decrement(value, params) {
    if (params === void 0) { params = { allowNegative: false }; }
    if (isNumber(value) === false)
        return;
    if (params.allowNegative === false && value === 0) {
        return value;
    }
    return value - 1;
}
/**
 * Generate random guid
 * @return {?}
 */
export function guid() {
    return 'xxxxxx4xyx'.replace(/[xy]/g, function (c) {
        /** @type {?} */
        var r = (Math.random() * 16) | 0;
        /** @type {?} */
        var v = c == 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtdXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGF0b3JhbWEvYWtpdGEvIiwic291cmNlcyI6WyJzcmMvYXBpL3N0b3JlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7Ozs7O0FBUzdDLE1BQU0sb0JBQW9CLEtBQWEsRUFBRSxNQUFrRTtJQUFsRSx1QkFBQSxFQUFBLFdBQTZDLFFBQVEsRUFBRSxTQUFTLEVBQUU7SUFDekcsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSztRQUFFLE9BQU87SUFDdEMsSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLEtBQUssS0FBSyxNQUFNLENBQUMsUUFBUTtRQUFFLE9BQU8sS0FBSyxDQUFDO0lBQy9ELE9BQU8sS0FBSyxHQUFHLENBQUMsQ0FBQztDQUNsQjs7Ozs7Ozs7Ozs7QUFTRCxNQUFNLG9CQUFvQixLQUFLLEVBQUUsTUFBNkQ7SUFBN0QsdUJBQUEsRUFBQSxXQUF1QyxhQUFhLEVBQUUsS0FBSyxFQUFFO0lBQzVGLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLEtBQUs7UUFBRSxPQUFPO0lBQ3RDLElBQUksTUFBTSxDQUFDLGFBQWEsS0FBSyxLQUFLLElBQUksS0FBSyxLQUFLLENBQUMsRUFBRTtRQUNqRCxPQUFPLEtBQUssQ0FBQztLQUNkO0lBQ0QsT0FBTyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0NBQ2xCOzs7OztBQUtELE1BQU07SUFDSixPQUFPLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLFVBQUEsQ0FBQzs7UUFDcEMsSUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUNHOztRQURyQyxJQUNFLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztRQUNyQyxPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDdkIsQ0FBQyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc051bWJlciB9IGZyb20gJy4uL2ludGVybmFsL3V0aWxzJztcblxuLyoqXG4gKiBAZXhhbXBsZVxuICpcbiAqIHRoaXMucGVvcGxlU3RvcmUudXBkYXRlKGlkLCBwZXJzb24gPT4gKHtcbiAqICAgZ3Vlc3RzOiBpbmNyZW1lbnQocGVyc29uLmd1ZXN0cylcbiAqIH0pKTtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluY3JlbWVudCh2YWx1ZTogbnVtYmVyLCBwYXJhbXM6IHsgbWF4VmFsdWU6IG51bWJlciB8IHVuZGVmaW5lZCB9ID0geyBtYXhWYWx1ZTogdW5kZWZpbmVkIH0pIHtcbiAgaWYgKGlzTnVtYmVyKHZhbHVlKSA9PT0gZmFsc2UpIHJldHVybjtcbiAgaWYgKHBhcmFtcy5tYXhWYWx1ZSAmJiB2YWx1ZSA9PT0gcGFyYW1zLm1heFZhbHVlKSByZXR1cm4gdmFsdWU7XG4gIHJldHVybiB2YWx1ZSArIDE7XG59XG5cbi8qKlxuICogQGV4YW1wbGVcbiAqXG4gKiB0aGlzLnBlb3BsZVN0b3JlLnVwZGF0ZShpZCwgcGVyc29uID0+ICh7XG4gKiAgIGd1ZXN0czogZGVjcmVtZW50KHBlcnNvbi5ndWVzdHMpXG4gKiB9KSk7XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNyZW1lbnQodmFsdWUsIHBhcmFtczogeyBhbGxvd05lZ2F0aXZlOiBib29sZWFuIH0gPSB7IGFsbG93TmVnYXRpdmU6IGZhbHNlIH0pIHtcbiAgaWYgKGlzTnVtYmVyKHZhbHVlKSA9PT0gZmFsc2UpIHJldHVybjtcbiAgaWYgKHBhcmFtcy5hbGxvd05lZ2F0aXZlID09PSBmYWxzZSAmJiB2YWx1ZSA9PT0gMCkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICByZXR1cm4gdmFsdWUgLSAxO1xufVxuXG4vKipcbiAqIEdlbmVyYXRlIHJhbmRvbSBndWlkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBndWlkKCkge1xuICByZXR1cm4gJ3h4eHh4eDR4eXgnLnJlcGxhY2UoL1t4eV0vZywgYyA9PiB7XG4gICAgY29uc3QgciA9IChNYXRoLnJhbmRvbSgpICogMTYpIHwgMCxcbiAgICAgIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MykgfCAweDg7XG4gICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xuICB9KTtcbn1cbiJdfQ==