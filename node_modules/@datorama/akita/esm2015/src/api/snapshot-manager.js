/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { __stores__ } from './store';
import { isString } from '../internal/utils';
export class SnapshotManager {
    /**
     * Get a snapshot of the whole state or a specific stores
     * Use it ONLY for things like saving the state in the server
     * @param {?=} stores
     * @return {?}
     */
    getStoresSnapshot(stores = []) {
        /** @type {?} */
        let acc = {};
        /** @type {?} */
        const hasInclude = stores.length > 0;
        /** @type {?} */
        const keys = hasInclude ? stores : Object.keys(__stores__);
        for (let i = 0; i < keys.length; i++) {
            /** @type {?} */
            let storeName = keys[i];
            acc[storeName] = __stores__[storeName]._value();
        }
        return acc;
    }
    /**
     * Set snapshot we get from the server
     * @param {?} stores
     * @return {?}
     */
    setStoresSnapshot(stores) {
        /** @type {?} */
        let normalizedStores = stores;
        if (isString(stores)) {
            normalizedStores = JSON.parse(/** @type {?} */ (normalizedStores));
        }
        for (let i = 0, keys = Object.keys(normalizedStores); i < keys.length; i++) {
            /** @type {?} */
            const storeName = keys[i];
            if (__stores__[storeName]) {
                __stores__[storeName].setState(() => normalizedStores[storeName]);
            }
        }
    }
}
/** @type {?} */
export const snapshotManager = new SnapshotManager();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic25hcHNob3QtbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BkYXRvcmFtYS9ha2l0YS8iLCJzb3VyY2VzIjpbInNyYy9hcGkvc25hcHNob3QtbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNyQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFN0MsTUFBTTs7Ozs7OztJQUtKLGlCQUFpQixDQUFDLFNBQW1CLEVBQUU7O1FBQ3JDLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQzs7UUFDYixNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQzs7UUFDckMsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDM0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7O1lBQ3BDLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4QixHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2pEO1FBRUQsT0FBTyxHQUFHLENBQUM7S0FDWjs7Ozs7O0lBS0QsaUJBQWlCLENBQUMsTUFBNkM7O1FBQzdELElBQUksZ0JBQWdCLEdBQUcsTUFBTSxDQUFDO1FBQzlCLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3BCLGdCQUFnQixHQUFHLElBQUksQ0FBQyxLQUFLLG1CQUFDLGdCQUEwQixFQUFDLENBQUM7U0FDM0Q7UUFFRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFOztZQUMxRSxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUIsSUFBSSxVQUFVLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ3pCLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQzthQUNuRTtTQUNGO0tBQ0Y7Q0FDRjs7QUFFRCxhQUFhLGVBQWUsR0FBRyxJQUFJLGVBQWUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19zdG9yZXNfXyB9IGZyb20gJy4vc3RvcmUnO1xuaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tICcuLi9pbnRlcm5hbC91dGlscyc7XG5cbmV4cG9ydCBjbGFzcyBTbmFwc2hvdE1hbmFnZXIge1xuICAvKipcbiAgICogR2V0IGEgc25hcHNob3Qgb2YgdGhlIHdob2xlIHN0YXRlIG9yIGEgc3BlY2lmaWMgc3RvcmVzXG4gICAqIFVzZSBpdCBPTkxZIGZvciB0aGluZ3MgbGlrZSBzYXZpbmcgdGhlIHN0YXRlIGluIHRoZSBzZXJ2ZXJcbiAgICovXG4gIGdldFN0b3Jlc1NuYXBzaG90KHN0b3Jlczogc3RyaW5nW10gPSBbXSkge1xuICAgIGxldCBhY2MgPSB7fTtcbiAgICBjb25zdCBoYXNJbmNsdWRlID0gc3RvcmVzLmxlbmd0aCA+IDA7XG4gICAgY29uc3Qga2V5cyA9IGhhc0luY2x1ZGUgPyBzdG9yZXMgOiBPYmplY3Qua2V5cyhfX3N0b3Jlc19fKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxldCBzdG9yZU5hbWUgPSBrZXlzW2ldO1xuICAgICAgYWNjW3N0b3JlTmFtZV0gPSBfX3N0b3Jlc19fW3N0b3JlTmFtZV0uX3ZhbHVlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjYztcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgc25hcHNob3Qgd2UgZ2V0IGZyb20gdGhlIHNlcnZlclxuICAgKi9cbiAgc2V0U3RvcmVzU25hcHNob3Qoc3RvcmVzOiB7IFtzdG9yZU5hbWU6IHN0cmluZ106IGFueSB9IHwgc3RyaW5nKSB7XG4gICAgbGV0IG5vcm1hbGl6ZWRTdG9yZXMgPSBzdG9yZXM7XG4gICAgaWYgKGlzU3RyaW5nKHN0b3JlcykpIHtcbiAgICAgIG5vcm1hbGl6ZWRTdG9yZXMgPSBKU09OLnBhcnNlKG5vcm1hbGl6ZWRTdG9yZXMgYXMgc3RyaW5nKTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMCwga2V5cyA9IE9iamVjdC5rZXlzKG5vcm1hbGl6ZWRTdG9yZXMpOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3Qgc3RvcmVOYW1lID0ga2V5c1tpXTtcbiAgICAgIGlmIChfX3N0b3Jlc19fW3N0b3JlTmFtZV0pIHtcbiAgICAgICAgX19zdG9yZXNfX1tzdG9yZU5hbWVdLnNldFN0YXRlKCgpID0+IG5vcm1hbGl6ZWRTdG9yZXNbc3RvcmVOYW1lXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBzbmFwc2hvdE1hbmFnZXIgPSBuZXcgU25hcHNob3RNYW5hZ2VyKCk7XG4iXX0=