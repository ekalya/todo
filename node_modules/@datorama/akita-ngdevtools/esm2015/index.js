/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { APP_INITIALIZER, NgModule, NgZone, InjectionToken, Inject } from '@angular/core';
import { akitaDevtools } from '@datorama/akita';
/** @type {?} */
export const DEVTOOLS_OPTIONS = new InjectionToken('DevtoolsOptions');
export class AkitaDevtools {
    /**
     * @param {?} ngZone
     * @param {?} options
     */
    constructor(ngZone, options) {
        this.ngZone = ngZone;
        this.options = options;
        akitaDevtools(this.ngZone, this.options);
    }
}
/** @nocollapse */
AkitaDevtools.ctorParameters = () => [
    { type: NgZone },
    { type: undefined, decorators: [{ type: Inject, args: [DEVTOOLS_OPTIONS,] }] }
];
if (false) {
    /** @type {?} */
    AkitaDevtools.prototype.ngZone;
    /** @type {?} */
    AkitaDevtools.prototype.options;
}
/**
 * @return {?}
 */
export function d() { }
/**
 * @param {?} akitaDevtools
 * @return {?}
 */
export function init(akitaDevtools) {
    return d;
}
export class AkitaNgDevtools {
    /**
     * @param {?=} options
     * @return {?}
     */
    static forRoot(options) {
        return {
            ngModule: AkitaNgDevtools,
            providers: [
                AkitaDevtools,
                {
                    provide: DEVTOOLS_OPTIONS,
                    useValue: options
                },
                {
                    provide: APP_INITIALIZER,
                    useFactory: init,
                    deps: [AkitaDevtools],
                    multi: true
                }
            ]
        };
    }
}
AkitaNgDevtools.decorators = [
    { type: NgModule, args: [{},] },
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGF0b3JhbWEvYWtpdGEtbmdkZXZ0b29scy8iLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsZUFBZSxFQUVmLFFBQVEsRUFDUixNQUFNLEVBQ04sY0FBYyxFQUNkLE1BQU0sRUFDUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsYUFBYSxFQUFtQixNQUFNLGlCQUFpQixDQUFDOztBQUVqRSxhQUFhLGdCQUFnQixHQUFHLElBQUksY0FBYyxDQUNoRCxpQkFBaUIsQ0FDbEIsQ0FBQztBQUVGLE1BQU07Ozs7O0lBQ0osWUFDVSxRQUMwQixPQUF3QjtRQURsRCxXQUFNLEdBQU4sTUFBTTtRQUNvQixZQUFPLEdBQVAsT0FBTyxDQUFpQjtRQUUxRCxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDMUM7Ozs7WUFoQkQsTUFBTTs0Q0FhSCxNQUFNLFNBQUMsZ0JBQWdCOzs7Ozs7Ozs7OztBQU01QixNQUFNLGlCQUFnQjs7Ozs7QUFDdEIsTUFBTSxlQUFlLGFBQTRCO0lBQy9DLE9BQU8sQ0FBQyxDQUFDO0NBQ1Y7QUFHRCxNQUFNOzs7OztJQUNHLE1BQU0sQ0FBQyxPQUFPLENBQ25CLE9BQWtDO1FBRWxDLE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUU7Z0JBQ1QsYUFBYTtnQkFDYjtvQkFDRSxPQUFPLEVBQUUsZ0JBQWdCO29CQUN6QixRQUFRLEVBQUUsT0FBTztpQkFDbEI7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLGVBQWU7b0JBQ3hCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUM7b0JBQ3JCLEtBQUssRUFBRSxJQUFJO2lCQUNaO2FBQ0Y7U0FDRixDQUFDOzs7O1lBcEJMLFFBQVEsU0FBQyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQVBQX0lOSVRJQUxJWkVSLFxuICBNb2R1bGVXaXRoUHJvdmlkZXJzLFxuICBOZ01vZHVsZSxcbiAgTmdab25lLFxuICBJbmplY3Rpb25Ub2tlbixcbiAgSW5qZWN0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgYWtpdGFEZXZ0b29scywgRGV2dG9vbHNPcHRpb25zIH0gZnJvbSAnQGRhdG9yYW1hL2FraXRhJztcblxuZXhwb3J0IGNvbnN0IERFVlRPT0xTX09QVElPTlMgPSBuZXcgSW5qZWN0aW9uVG9rZW48RGV2dG9vbHNPcHRpb25zPihcbiAgJ0RldnRvb2xzT3B0aW9ucydcbik7XG5cbmV4cG9ydCBjbGFzcyBBa2l0YURldnRvb2xzIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSxcbiAgICBASW5qZWN0KERFVlRPT0xTX09QVElPTlMpIHByaXZhdGUgb3B0aW9uczogRGV2dG9vbHNPcHRpb25zXG4gICkge1xuICAgIGFraXRhRGV2dG9vbHModGhpcy5uZ1pvbmUsIHRoaXMub3B0aW9ucyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGQoKSB7fVxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoYWtpdGFEZXZ0b29sczogQWtpdGFEZXZ0b29scykge1xuICByZXR1cm4gZDtcbn1cblxuQE5nTW9kdWxlKHt9KVxuZXhwb3J0IGNsYXNzIEFraXRhTmdEZXZ0b29scyB7XG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdChcbiAgICBvcHRpb25zPzogUGFydGlhbDxEZXZ0b29sc09wdGlvbnM+XG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQWtpdGFOZ0RldnRvb2xzLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIEFraXRhRGV2dG9vbHMsXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBERVZUT09MU19PUFRJT05TLFxuICAgICAgICAgIHVzZVZhbHVlOiBvcHRpb25zXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBBUFBfSU5JVElBTElaRVIsXG4gICAgICAgICAgdXNlRmFjdG9yeTogaW5pdCxcbiAgICAgICAgICBkZXBzOiBbQWtpdGFEZXZ0b29sc10sXG4gICAgICAgICAgbXVsdGk6IHRydWVcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==