{"version":3,"file":"datorama-akita-ngdevtools.umd.js.map","sources":["ng://@datorama/akita-ngdevtools/index.ts"],"sourcesContent":["import {\n  APP_INITIALIZER,\n  ModuleWithProviders,\n  NgModule,\n  NgZone,\n  InjectionToken,\n  Inject\n} from '@angular/core';\nimport { akitaDevtools, DevtoolsOptions } from '@datorama/akita';\n\nexport const DEVTOOLS_OPTIONS = new InjectionToken<DevtoolsOptions>(\n  'DevtoolsOptions'\n);\n\nexport class AkitaDevtools {\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DEVTOOLS_OPTIONS) private options: DevtoolsOptions\n  ) {\n    akitaDevtools(this.ngZone, this.options);\n  }\n}\n\nexport function d() {}\nexport function init(akitaDevtools: AkitaDevtools) {\n  return d;\n}\n\n@NgModule({})\nexport class AkitaNgDevtools {\n  public static forRoot(\n    options?: Partial<DevtoolsOptions>\n  ): ModuleWithProviders {\n    return {\n      ngModule: AkitaNgDevtools,\n      providers: [\n        AkitaDevtools,\n        {\n          provide: DEVTOOLS_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: init,\n          deps: [AkitaDevtools],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"],"names":["InjectionToken","akitaDevtools","NgZone","Inject","APP_INITIALIZER","NgModule"],"mappings":";;;;;;;;;;AAAA;AAUA,QAAa,gBAAgB,GAAG,IAAIA,mBAAc,CAChD,iBAAiB,CAClB,CAAC;;QAGA,uBACU,QAC0B,OAAwB;YADlD,WAAM,GAAN,MAAM;YACoB,YAAO,GAAP,OAAO,CAAiB;YAE1DC,mBAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC1C;;;;wBAhBDC,WAAM;wDAaHC,WAAM,SAAC,gBAAgB;;;4BAjB5B;;;;;AAuBA,oBAAsB;;;;;AACtB,kBAAqB,aAA4B;QAC/C,OAAO,CAAC,CAAC;KACV;;;;;;;;QAIe,uBAAO;;;;sBACnB,OAAkC;gBAElC,OAAO;oBACL,QAAQ,EAAE,eAAe;oBACzB,SAAS,EAAE;wBACT,aAAa;wBACb;4BACE,OAAO,EAAE,gBAAgB;4BACzB,QAAQ,EAAE,OAAO;yBAClB;wBACD;4BACE,OAAO,EAAEC,oBAAe;4BACxB,UAAU,EAAE,IAAI;4BAChB,IAAI,EAAE,CAAC,aAAa,CAAC;4BACrB,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF,CAAC;;;oBApBLC,aAAQ,SAAC,EAAE;;8BA5BZ;;;;;;;;;;;;;;;;;;;;;;"}
