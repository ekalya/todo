(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "rxjs", "rxjs/operators"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var rxjs_1 = require("rxjs");
    var operators_1 = require("rxjs/operators");
    function isFunction(value) {
        return typeof value === 'function';
    }
    exports.untilDestroyed = function (componentInstance, destroyMethodName) {
        if (destroyMethodName === void 0) { destroyMethodName = 'ngOnDestroy'; }
        return function (source) {
            var originalDestroy = componentInstance[destroyMethodName];
            componentInstance['__takeUntilDestroy'] =
                componentInstance['__takeUntilDestroy'] || new rxjs_1.Subject();
            componentInstance[destroyMethodName] = function () {
                isFunction(originalDestroy) && originalDestroy.apply(this, arguments);
                componentInstance['__takeUntilDestroy'].next(true);
                componentInstance['__takeUntilDestroy'].complete();
            };
            return source.pipe(operators_1.takeUntil(componentInstance['__takeUntilDestroy']));
        };
    };
});
//# sourceMappingURL=take-until-destroy.js.map